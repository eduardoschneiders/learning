          From Wikipedia, the free encyclopedia                            Jump to:     navigation,      search          Application Response Measurement (ARM) is an open standard published by the Open Group for monitoring and diagnosing performance bottlenecks within complex enterprise applications that use loosely-coupled designs or service-oriented architectures. It includes an API for C and Java that allows timing information associated with each step in processing a transaction to be logged to a remote server for later analysis.    Contents   1 History 2 Introduction 3 Approach 4 Concepts  4.1 ARM Application 4.2 ARM Transaction 4.3 ARM System Address 4.4 ARM Correlator 4.5 ARM Metric 4.6 ARM Properties 4.7 ARM User   5 ARM Instrumented Applications 6 References 7 External links    History[edit] Version 1 of ARM was developed jointly by Tivoli Software and Hewlett Packard in 1996. Version 2 was developed by an industry partnership (the ARM Working Group) and became available in December 1997 as an open standard approved by the Open Group. ARM 4.0 was released in 2003 and revised in 2004. As of 2007[update], ARM 4.1 version 1 is the latest version of the ARM standard. Introduction[edit] Current application design tends to be more complex and distributed over networks. This leads to new challenges in today's development and monitoring tools to provide application developers, system- and application administrators with the information they need. Within distributed applications it is not easy to estimate if the application performs well. The following issues help in the evaluation of distributed applications:  Are business transactions succeeding and, if not, what is the cause of failure? What is the response time of a transaction? Where are the bottlenecks, which sub-transaction could cause a bottleneck? Which and how many transactions are executed in an application? How to tune an application or its environment to perform better?  ARM helps answer these questions. It's important to mention that the ARM benefits as they are defined here are now just a subset of the Application Performance Management space. Approach[edit] The main approach of using ARM is:  Define business as well as technical transactions which are of interest. Insert calls into the application to the ARM interface to measure these defined transactions. Deploy the instrumented application in their normal environment with an installed ARM agent. The used ARM implementation now provides the transaction measurements of interest.  Concepts[edit] ARM defines the following concepts to provide the described functionality. ARM Application[edit] Complex distributed applications usually consist of many different single applications (processes). In order to be able to understand the relationship between all single applications the concept of an ARM application is introduced with version 4.0 of the ARM standard. Each ARM transaction is executed exactly within one ARM application. ARM Transaction[edit] Transactions are the main concept of the ARM standard and represents a single performance measurement. A transaction definition defines the type (name) and additional attributes of an ARM transaction. A transaction can be executed (started and stopped) several times which results in multiple measurements. Each measurement has basic attributes like status of completion (good, failed, aborted), start- and stop timestamp, the resulting duration and the system address (host) it was executed on. Additionally special metrics or context properties can be associated with a transaction measurement. ARM System Address[edit] Uniquely defines a host by its name, IP address or other unique information. ARM Correlator[edit] ARM correlators are used to express a correlation between two ARM transactions. This is a synchronous relationship also known as parent-child relationship. Commonly, a parent transaction triggers a child transaction and only continues its execution when the child transaction has finished. Using correlators, it is possible to split a complex transaction into several nested child transactions, where each child transaction can have child transactions of its own. This results in a tree of transactions with the topmost parent transaction being the root of the tree. ARM 4.1 defines asynchronous relationships to support data flow driven architectures. ARM Metric[edit] ARM Metrics can be used to get more information about the execution of a transaction. ARM defines a set of metric types for different purposes such as a counter, a gauge or just a numeric value. ARM Properties[edit] Properties are a set of so-called name/value pair strings which qualifies an ARM transaction or an ARM application beyond the basic definition of these entities and allows to associate additional context information to each transaction measurement. ARM User[edit] Defines a name of a user on behalf an transaction measurement was executed. ARM Instrumented Applications[edit] The following applications are already instrumented with ARM calls:  Apache HTTP Server using the ARM 4.0 Modul mod_arm4.[1][2] All HTTP requests are measured using ARM. Mozilla Firefox using the ARM 4.0 XPCOM extension npARM.[3] IBM WebSphere Application server.[4] Various requests like URI, JSP and others are measured using ARM. IBM HTTP Server.[5] IBM DB2 Database Server.[6] SAS (software) supports ARM 2.0 since long. With version 9.2 of its release, it also supports ARM 4.0.[7] Baan 5 and Infor ERP Ln 6.1 IBM Tivoli Access Manager  References[edit]   ^ "Apache ARM 4.0 Modul". Httpd.apache.org. Retrieved 2012-05-20.  ^ "For productive environments modified Apache ARM 4.0 Modul". Myarm.com. 2011-06-13. Retrieved 2012-05-20.  ^ "npARM xpcom extension for Mozilla Firefox". Myarm.com. 2011-11-26. Retrieved 2012-05-20.  ^ "WAS v6.1 ARM Transactions". Publib.boulder.ibm.com. 2012-04-04. Retrieved 2012-05-20.  ^ "Enabling ARM on HTTP Server". Publib.boulder.ibm.com. Retrieved 2012-05-20.  ^ http://publib.boulder.ibm.com/infocenter/eserver/v1r2/topic/ewlminfo/eicaaarmdb2.html ^ "Using SAS 9.2 ARM Interface with Existing ARM Applications: SAS 9.2 ARM Interface with Existing SAS Applications Overview". Support.sas.com. 2010-05-27. Retrieved 2012-05-20.    External links[edit]  Open Group official ARM Web-Site and Open Source SDK Site to coordinate further development of the Open Source ARM4SDK Open-ARM Open Source ARM4 Java implementation MyARM Fully ARM 4.0 compliant C/C++, Java, CSharp .NET and Python implementation and a free of charge community edition          v t e   Standards by The Open Group          ARM CDE CLI CMPI DCE DRDA LDAP Motif SUS (POSIX) X11                            Retrieved from "https://en.wikipedia.org/w/index.php?title=Application_Response_Measurement&oldid=721496292"          Categories: Enterprise application integration1996 introductionsOpen Group standardsHidden categories: Articles containing potentially dated statements from 2007All articles containing potentially dated statements            
